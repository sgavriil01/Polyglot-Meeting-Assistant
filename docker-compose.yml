version: '3.8'

services:
  # Full-stack application with backend API and frontend assets
  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/backend/uploads
      - ./backend/data:/app/backend/data
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app/backend/src
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development setup with separate frontend and backend
  backend-dev:
    build: 
      context: .
      target: python-backend
    ports:
      - "8001:8000"  # Different port to avoid conflicts
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app/backend/src
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    profiles: ["dev"]  # Only start with --profile dev

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    depends_on:
      - backend-dev
    environment:
      - REACT_APP_API_URL=http://localhost:8001
    restart: unless-stopped
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    profiles: ["dev"]  # Only start with --profile dev

volumes:
  uploads:
  search_index:
